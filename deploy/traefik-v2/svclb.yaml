---
apiVersion: v1
data:
  entry: |
      #!/bin/sh
      # Modified version of https://github.com/k3s-io/klipper-lb/blob/master/entry
      # License: https://github.com/k3s-io/klipper-lb/blob/master/LICENSE
      set -e -x
      trap exit TERM INT
      echo 1 > /proc/sys/net/ipv4/ip_forward
      [ `cat /proc/sys/net/ipv4/ip_forward` == 1 ]
      apk add -U bind-tools iptables
      DEST_IP=$(echo "${DEST_IP}" | grep -E -o '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}' || dig +short "${DEST_IP}")
      iptables -t nat -I PREROUTING ! -s ${DEST_IP}/32 -p ${DEST_PROTO} --dport ${SRC_PORT} -j DNAT --to ${DEST_IP}:${DEST_PORT}
      iptables -t nat -I POSTROUTING -d ${DEST_IP}/32 -p ${DEST_PROTO} -j MASQUERADE
      [ -e /pause ] || mkfifo /pause
      </pause
kind: ConfigMap
metadata:
  name: scripts-svclb
  namespace: traefik-system
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: svclb-traefik
  namespace: traefik-system
spec:
  selector:
    matchLabels:
      app: svclb-traefik
  template:
    metadata:
      labels:
        app: svclb-traefik
        svccontroller.k3s.cattle.io/svcname: traefik
    spec:
      volumes:
      - name: config
        configMap:
          defaultMode: 420
          name: scripts-svclb

      containers:
        - name: lb-port-80
          command: ["sh"]
          args: [ "/entry" ]
          env:
            - name: SRC_PORT
              value: "80"
            - name: DEST_PROTO
              value: TCP
            - name: DEST_PORT
              value: "80"
            - name: DEST_IP
              value: traefik-ingress-controller-http-service.traefik-system.svc.cluster.local
          image: alpine:3
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 80
              hostPort: 80
              name: lb-port-80
              protocol: TCP
          resources: {}
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /entry
            name: config
            subPath: entry

        - name: lb-port-443
          command: ["sh"]
          args: [ "/entry" ]
          env:
            - name: SRC_PORT
              value: "443"
            - name: DEST_PROTO
              value: TCP
            - name: DEST_PORT
              value: "443"
            - name: DEST_IP
              value: traefik-ingress-controller-http-service.traefik-system.svc.cluster.local
          image: alpine:3
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 443
              hostPort: 443
              name: lb-port-443
              protocol: TCP
          resources: {}
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /entry
            name: config
            subPath: entry

      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
